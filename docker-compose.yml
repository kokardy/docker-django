version: "3"

services:

  django:
    build:
      context: ./django
      args:
        - "https_proxy=${https_proxy}"
    #image: kokardy/django
    #restart: always
    command: ["./entrypoint.sh"]
    #command: ["tail", "-f", "/dev/null"]
    environment:
      - "PROJECT_NAME=project2"
    env_file:
      - common_env
    depends_on:
      - postgres
    volumes_from:
      - storage
    volumes:
      - ./asset:/asset
    # healthcheck:
    #   test: ".project2/healthcheck.py"
    #   interval: 3s
    #   timeout: 1s
    #   retries: 5
    #   start_period: 1s

  # logging:
  #   driver: journald
  #   options:
  #     tag: "{{.ImageName}}.{{.Name}}.{{.FullID}}"

  postgres:
    image: postgres:14-alpine
    #restart: always
    env_file:
      - common_env
    volumes_from:
      - storage

  nginx:
    image: nginx:alpine
    #restart: always
    ports:
      - "10000:80"
    volumes_from:
      - storage
    links:
      - django
    depends_on:
      django:
        condition: service_started
        # condition: service_healthy


  storage:
    image: alpine
    volumes:
      - ./nginx/static:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./pg/initdb:/docker-entrypoint-initdb.d

      #PostgreSQLのデータ永続化
      #- ./pg/pgdata:/var/lib/postgresql/data
#
