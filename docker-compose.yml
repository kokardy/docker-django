version: "2"

services:

  django:
    build:
      context: ./django_image
      args:
        - "https_proxy=${https_proxy}"
    #image: kokardy/django
    restart: always
    #command: ["gunicorn", "pro1.wsgi:application", "-b", "0.0.0.0:8000"]
    #command: ["./wait.sh", "&&", "python", "manage.py", "runserver", "0.0.0.0:8000"]
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    #command: ["tail", "-f", "/dev/null"]
    env_file:
      - common_env
    depends_on:
      - postgres
    volumes_from:
      - storage

  postgres:
    image: postgres:9.5-alpine
    restart: always
    env_file:
      - common_env
    volumes_from:
      - storage

  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "10000:80"
    volumes_from:
      - storage

  storage:
    image: alpine
    volumes:
      - ./nginx/static:/usr/share/nginx/html
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./pg/initdb:/docker-entrypoint-initdb.d
      - ./project:/asset/project

      #PostgreSQLのデータ永続化
      #- ./pg/pgdata:/var/lib/postgresql/data

